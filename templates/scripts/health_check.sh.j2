#!/bin/bash

# This script is auto-generated by Ansible

# Extract variables directly from Ansible environment
telegram_bot_token="{{ telegram_bot_token }}"
telegram_chat_id="{{ telegram_chat_id }}"
server_ip="{{ ansible_default_ipv4.address }}"  # Use the current server's IP

# Define log file paths
log_directory="/root"
success_log="${log_directory}/success.log"
error_log="${log_directory}/error.log"

# Create the log directory if it does not exist
mkdir -p "${log_directory}"

# Construct the Telegram base URL
telegram_url="https://api.telegram.org/bot${telegram_bot_token}/sendMessage"

# Function to send an alert to Telegram
send_alert() {
  local message="$1"
  curl -s -X POST "${telegram_url}" \
    -d "chat_id=${telegram_chat_id}" \
    -d "text=${message}" > /dev/null
}

# Check localhost:17690/health on the specific server
response=$(curl -s http://localhost:17690/health | jq -r .status)
current_time=$(date "+%Y-%m-%d %H:%M:%S")

if [ "$response" != "OK" ]; then
  # Only show the IP of the server that failed
  message="ALERT: Health check failed for ${server_ip}. Status: ${response}"
  echo "[${current_time}] ALERT: Health check failed for ${server_ip}. Status: ${response}" >> "${error_log}"
  send_alert "${message}"
else
  echo "[${current_time}] SUCCESS: Health check passed for ${server_ip}. Status: ${response}" >> "${success_log}"
fi

# Check external API health: https://api.testnet-3.elixir.xyz/health/
response=$(curl -s https://api.testnet-3.elixir.xyz/health/ | jq -r .status)
current_time=$(date "+%Y-%m-%d %H:%M:%S")

if [ "$response" != "up" ]; then
  message="ALERT: Elixir API health check failed. Status: ${response}"
  echo "[${current_time}] ALERT: Elixir API health check failed. Status: ${response}" >> "${error_log}"
  send_alert "${message}"
else
  echo "[${current_time}] SUCCESS: Elixir API health check passed. Status: ${response}" >> "${success_log}"
fi
